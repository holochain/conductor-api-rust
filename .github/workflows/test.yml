name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install nix
        uses: cachix/install-nix-action@v22

      - name: Set up cachix
        uses: cachix/cachix-action@v12
        with:
          name: holochain-ci

      - name: Cache fixture
        uses: actions/cache@v3
        if: always()
        env:
          cache-name: fixture
        with:
          path: |
            .cargo
            fixture/zomes/foo/target
          key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('fixture/zomes/foo/Cargo.lock') }}

      - name: Cache client build
        uses: actions/cache@v3
        if: always()
        env:
          cache-name: client
        with:
          path: target
          key: ${{ matrix.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}

      - name: Install nix packages
        run: nix develop -c $SHELL -c "echo Nix packages installed"

      - name: Build fixture
        run: nix develop -c $SHELL -c "./build-fixture.sh"

      - name: Clean up nix files to prevent insufficient disk space
        run: nix-collect-garbage -d

      - name: Build client
        run: cargo build

      - name: Run tests
        run: cargo test

      - name: Setup tmate session if build and test run failed
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
